#install.packages("readr")

library(readr)
robo_data <- read_csv("gt_0705_parking_00.csv")

#Translation note:
#X = left-right, Y = forward-backward
head(robo_data, 10)
summary(robo_data)

par(mar=c(4,4,2,2))

#Right-skewed distribution
hist(robo_data$trans_x, main="Histogram of trans_x", xlab="trans_x")

#Normal distribution
hist(robo_data$trans_y, main="Histogram of trans_y", xlab="trans_y")

#Right-skewed distribution
hist(robo_data$trans_z, main="Histogram of trans_z", xlab="trans_z")

#Normal distribution
hist(robo_data$roll, main="Histogram of roll", xlab="roll")

#Normal distribution
hist(robo_data$pitch, main="Histogram of pitch", xlab="pitch")

#Multimodal distribution
hist(robo_data$yaw, main="Histogram of yaw", xlab="yaw")

#Histograms provide an interesting way to describe quantitative data.
#Histograms can partition data into different intervals for analysis.

#Strong linear relationship
plot(robo_data$trans_x, robo_data$trans_y, xlab="trans_x", ylab="trans_y")
x_model <- lm(robo_data$trans_y ~ robo_data$trans_x)

#Moderate linear relationship
plot(robo_data$trans_z, robo_data$trans_y, xlab="trans_z", ylab="trans_y")
z_model <- lm(robo_data$trans_y ~ robo_data$trans_z)

#Very weak linear relationship
plot(robo_data$roll, robo_data$trans_y, xlab="roll", ylab="trans_y")
roll_model <- lm(robo_data$trans_y ~ robo_data$roll)

#Not linear at all
plot(robo_data$pitch, robo_data$trans_y, xlab="pitch", ylab="trans_y")
pitch_model <- lm(robo_data$trans_y ~ robo_data$pitch)

#Not linear at all
plot(robo_data$yaw, robo_data$trans_y, xlab="yaw", ylab="trans_y")
yaw_model <- lm(robo_data$trans_y ~ robo_data$yaw)

#Existence? Yes.
#Independence? Yes.
#Linearity? Only for trans_x
#Homoscedasticity? No.
#Normal? No.

#Based on the analysis, the best relationships are:
#trans_y = Btrans_x+E
#trans_y = Btrans_z+E
#trans_y = Broll+E

print(cor(robo_data$trans_x, robo_data$trans_y))
print(cor(robo_data$trans_z, robo_data$trans_y))
print(cor(robo_data$roll, robo_data$trans_y))
print(cor(robo_data$pitch, robo_data$trans_y))
print(cor(robo_data$yaw, robo_data$trans_y))

